component_interaction,"When a user has any of the following interactions with a component on the website:  click, expand, collapse, check, uncheck, open, close"
wayfinder_start,"This event should be triggered when a user clicks on one of the first wayfinder questions, located on the homepage."
wayfinder_next,This event should be triggered when a user clicks ‘next’ as they progress through the wayfinder tool. It should also be triggered if a user navigates back and then updates their selection.
wayfinder_back,This event should be triggered when a user clicks ‘back’ as they progress through the wayfinder tool.
wayfinder_complete,This event should be triggered when a user completes the wayfinder tool ie. by pressing the final button on their selected flow (‘What’s my next step?').
outlet_interaction,"This interaction fires across multiple areas of the site - when a user interacts with an outlet card. 

Interactions may include: click to call, add to shortlist, see details click, add to compare, remove from compare, add note."
outlet_view,This event will fire when a user views an Outlet detail page (of any care type).
provider_interaction,"This event triggers each time a user clicks to view a provider profile from one of the entry points (outlet page, provider search, fee estimator)"
provider_view,"This event triggers each time a user views a variation of the provider page - including Summary, ACH, SAH, and CHSP ‘sections’. This also includes viewing unregistered provider pages."
mar_start,This event should trigger when a user selects a role and clicks on 'Start referral'.
mar_next,This event is triggered when the user completes a section of Make a referral.
ao_start,This event should be triggered when a user clicks any of the ‘Start now’ buttons on the ‘Request an assessment online’ page.
mar_back,This event triggers when user navigates back to the previous section
mar_menu_stepper,This event triggers when the user interacts with the menu stepper
mar_complete,This event should fire when the MAR confirmation screen is loaded.
eol_start,This event should trigger only when the user has selected ‘End of Life' and clicked on 'Access form' in the 'Reason for Referral' section.
eol_next,This event tracks the progression of user through the end-of-life form. It should trigger when the user uploads the mandatory end-of-life documentation and clicks on the 'Next' button.
eol_complete,This event tracks the submissions of completed end-of-life forms. It should trigger when the user clicks on 'Submit'.
abandon_tool,"This event should be triggered if a user decides to abandon a tool at any point - by closing/exiting the active drawer, navigating elsewhere on the site, or closing their tab/browser window. This predominantly applies to tools where a user answers ‘questions’ within a drawer.

This will also apply in cases of session inactivity (if the tool has remained open for longer than 60 minutes and the user has to exit and restart)."
news_article_click,This event triggers each time a user clicks a news article.
news_interaction,This event triggers when a user interacts with pagination and filters (open close + apply) on the news & updates page.
search_overlay,"This event will fire when a user opens or closes the search overlay on any pages of the ‘Site Search’ website, or when a user clicks one of popular page, helpful tools or search helper links."
search,"This event should be fired when a user executes a search - whether using keyword or suggested option, on either the ‘Search overlay’ or the ‘Search results’ page.

This also applies to the quick search pills placed on ‘null search’ and ‘no input search’  page."
search_results_loaded,"This event will fire when the search results page is loaded. The purpose of this event is to handle the result_count parameter.

If a user applies filters and the page is reloaded as a result, this event should fire again."
search_result_click,"This event will fire when a user clicks on a search result. When a user clicks on a ‘suggested’ search option, this event should fire alongside the 'search' event."
search_refine,"This event tracks users interactions on 'Search results' page and should fire when a user engages with the filters popover, selects/deselects filters or interacts with pagination."
search_result_cta_click,This event will fire when a user interacts with one of the CMS components on the search result page.
sia_start,This event should be triggered when a user clicks on ‘Start' on the 'Should I apply?’ page.
sia_next,This event should be triggered when a user clicks ‘next’ as they progress through the Should I apply? tool. It should also be triggered if a user navigates back and then updates their selection.
sia_back,This event should be triggered when a user clicks ‘back’ as they progress through the Should I apply? tool.
sia_complete,"This event should be pushed when a user completes the Should I apply tool. 

This tool has three possible end screens depending on the user's path. This event should fire when the user reaches any of these three end screens (on 'end screen' page load)"
sia_cta_click,This event tracks how many users are continuing their journey after completing the Should I apply tool by clicking the buttons.
outlet_detail_interaction,"This event will fire when a user interacts with a component on the outlet detail page.

Interactions may include: clicks, expand/collapse, check/uncheck, open/close "
he_view,"This event will fire when a user view the HE landing page (any variation), or a Story page. The purpose of this event is to determine which variants of each page people are more engaged with."
he_personalise,"This event tracks the various interactions users can have with personalisation features in the HE section of the website. 

These interactions include: start personalisation, complete personalisation, edit personalisation"
he_interaction,"There are numerous interactions a user can have within HE, including clicking on story, service, aid and specialisation components on overview or story pages. This event also fires for generic interactions like clicking load more or see all."
provider_detail_interaction,"This event will fire when a user interacts with a component on the provider detail page.

Interactions may include: clicks, expand/collapse, check/uncheck, open/close"
fap_wayfinder_start,This event will fire when a user opens the FAP Wayfinder ‘Drawer’ by clicking ‘Find a provider’ or ‘Clear and start a new search’.
fap_wayfinder_next,This event will fire when a user clicks ‘next’ as they progress through the wayfinder tool. It should also be triggered if a user navigates back and then updates their selection.
fap_wayfinder_skip,This event will fire when a user presses ‘Skip’ whilst using the FAP Wayfinder tool.
fap_outlet_search,"This event will fire when a user searches for an outlet using one of the following search options: Personalised search (prefilled personalised values, or from fap wayfinder), Normal search  (input values - includes applying/updating filtering), Quick search (recent or saved search), Location search (Help Explorer, Provider pages) "
fap_provider_search,"This event will fire when a user interacts with the Provider search feature. Please note, clicking an option from the dropdown should also trigger a ‘provider_interaction’ event."
fap_interaction,"This event is used to track all of the other micro-interactions a user can complete across FAP search pages like: clear, save search sort, open/close filters, add/remove filters, pagination."
compare_view,This event will fire when a user views the compare page.
compare_edit,"This event will fire when a user Opens/Closes the Edit Compare drawer. It also fires if the user toggles between the active care type within the drawer.

For SAH, this will also apply to opening/closing the change/select services to compare drawers - and toggling between care type within this drawer.

This should also fire on the SAH drawers (select a care type + select services to compare), for situations where we do not already know the care type + user services."
ao_screen_loaded,This event should fire each time a new screen is loaded as a user progresses through the Apply Online tool.
ao_screen_nav,"This event should fire each time a user interacts with the ‘Navigation’ buttons on their active screen. Depending on which screen they see this could be next, back, continue to, submit, edit etc.

In most cases this should fire alongside ao_next and ao_back events"
ao_next,This event should be triggered when a user clicks ‘next’ as they progress through the Apply Online form. It should also be triggered if a user navigates back and then updates their selection. This event will fire alongside ao_screen_nav event.
ao_back,This event should be triggered when a user clicks ‘back’ as they progress through the AO form. This will fire alongside ao_screen_nav
ao_complete,"This event should be fired when the confirmation screen is loaded, following an application being submitted. It should NOT fire if the user receives an error screen.

Note: The event should trigger only the first time this pages is loaded. If the page is refreshed at any point it should not trigger another completion, although it can fire another ao_screen_loaded event."
user_data_update,"To complement our identify + alias calls, we will include a track event each time we send a data point to local storage, or commit to the database. "
nav_click,This event should be triggered whenever a user interacts with the header or footer navigation bars. This include clicks of top level + detailed nav items.
page (please note this is not an 'event' but a rudderstack call that will provide pageview data),To track page views across the site we will rely on the RudderStack page call. This event should be triggered each time a new page or screen is shown to the user.
mg_start,"This event should be triggered in a number of places:

when a user clicks ‘Create your own guide’ on the My Guide landing page

when a user clicks ‘Create a checklist’ on the ‘My checklist’ page (for themselves or as a professional, for their patient)

when a user clicks ‘Add my assessment result’ on the ‘My situation and needs’ page

when a user clicks ‘Update’ on the ‘My situation and needs’ page (applies to all sections - Assessment, Situation and Interests)"
mg_next,"This event should be triggered when a user clicks ‘next’ as they progress through the question set (relevant to their flow). It should also be triggered if a user navigates back and then updates their selection.

This does not apply to updating situation or interests, but it does apply when updating assessment outcomes."
mg_back,"This event should be triggered when a user clicks ‘back’ as they progress through the question set (relevant to their flow). This applies to all flows (including situation, interests and assessment)."
mg_view_summary,"This event should be triggered each time a user views a ‘Summary’ screen within the My Guide question flows:

When a user initially opens Situation, Interests, or Assessment - after pressing ‘Update’ from within the My Situation page

At the end of the Assessment flow, before a user submits their changes

At the end of the Client Checklist flow, before a Professional shares and deletes the guide

After updating a section within the Situation or Interests flows"
mg_update_start,"This event should fire when a user opens a section drawer, or navigates back to a previous question in their flow by pressing ‘update’ within the summary page."
mg_update_complete,"This interaction should fire when a user clicks ‘update’ whilst within the section drawer.

For conditional flows like Assessment (and maybe client checklist tbd.) this interaction won’t apply - instead mg_next will fire as a user proceeds through the question flow, and the flow_type parameter will be updated from “Add data” to “Update data”."
mg_complete,"This event should be triggered when a user completes their My Guide flow. 

Onboarding/Checklist - clicking ‘Go to my guide' at end of question set (or being redirected after this screen)

Client Checklist - clicking ‘Delete and close’ on Summary page

Situation/Interests - clicking ‘Done’ on Summary page

Assessment - clicking ‘Add assessment outcome’ or ‘Done’ on Summary page (depending on which flow the user is in)"
mg_open,"This event should be triggered when a user opens their My Guide. It should only fire once per session. This could be triggered by:

Clicking ‘My Guide’ in the header nav

Clicking on any of the ‘My Guide’ popups that may appear across the website"
mg_view,This event should be triggered when a user views any page (section) of their My Guide.
mg_delete,This event should fire when a user deletes their guide (pressing ‘Delete selected’). It should not be fired when they open/close the modal (this will be covered by detail interactions below).
mg_detail_interaction,"This event will fire when a user engages with any of the components located across the various My Guide pages. These interactions include: clicks, expand/collapse, check/uncheck, open/close"
my_costs_start,"This event should be triggered when the user opens the ‘my costs’ question set, which can occur in a number of places:

when a user clicks ‘Start estimation’ on the SAH or ACH budget planner landing page

when a user clicks ‘Check my costs' on an outlet page

when a user clicks ‘Edit’ on their budget planner summary page"
my_costs_next,This event should be triggered when a user clicks ‘next’ as they progress through the question set (relevant to their pathway). It should also be triggered if a user navigates back and then updates their selection.
my_costs_back,This event should be triggered when a user clicks ‘back’ as they progress through the question set (relevant to their flow).
my_costs_summary_view,"This event should be triggered each time a user views a ‘Summary’ screen within the My Costs flows:

When a user opens any of the ‘My situation’ sections - after pressing ‘Edit’ from within the Budget  Planner page

At the end of each question flow, before a user submits their changes"
my_costs_update_start,"This event should fire when a user opens a section drawer, or navigates back to a previous question in their flow by pressing ‘update’ within the summary page.

It also applies if a user presses ‘Reset’ to fully restart their flow."
my_costs_complete,This event should be triggered when a user completes their My Costs flow by clicking ‘Submit’ after viewing the Summary page.
bp_add_service_start,"This event should be triggered whenever a user adds a a provider or a service to their budget planner.

This also fires when a user selects ‘edit’ - this will trigger flow_type = update."
bp_add_service_next,This event should be fired when a user progresses through questions in the ‘Add service’ flow. This will only apply to the ‘Search for a service’ interaction.
bp_add_service_back,This event should be fired whenever a user presses ‘back’ when adding a provider/service to their budget planner.
bp_add_service_complete,This event should be fired when a user submits their service selection in the budget planner.
bp_remove_service,This event should fire when a user removes a service from their planner (after opening the Edit window).
bp_over_budget_attempt,This event should fire when a user adds/edits a service that triggers a warning that they over their allocated budget.
bp_add_ach_start,This event should fire when a user clicks to add an ACH outlet to their budget planner.
bp_add_ach_complete,This event should fire when a user clicks ‘Add provider’ after selecting their preferred ACH outlet from the shortlist.
bp_update_room_option,This event should fire whenever a user selects a new room type from the dropdown.
bp_reset,"This event should fire when a user clears all of their services, or resets their ACH provider. It should not be fired when they open/close the ‘Clear all services’ modal (this will be covered by detail interactions below)."
bp_view,"This event should be triggered each time the ‘budget planner’ is viewed - regardless of whether services/providers have or have not been added. Each time a user adds a service, or changes the front end display of the page (ie. Toggling QTR vs Month, changing room type) the event should fire again."
bp_detail_interaction,"This event should be fired when a user has any of the following interactions with a component on the budget planner:

clicks
expand/collapse
check/uncheck
open/close"
